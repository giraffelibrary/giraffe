Steps to create a source release archive.

The version is specified by VERSION.
REPODIR should be set to the root directory of the Git repo, e.g.

  VERSION=A.B.C
  REPODIR=~/SML/GiraffeLibrary/giraffe


Set up the release directory.

 A. To create a formal release from a Git tag, extract the source code
    with Git.  VERSION is used as the Git tag name.

      BUILDDIR=/tmp/release
      mkdir -p ${BUILDDIR}
      cd ${BUILDDIR}
      git clone --recurse-submodules ${REPODIR}
      RELEASEDIR=${BUILDDIR}/giraffe
      cd ${RELEASEDIR}
      git checkout ${VERSION}

 B. To create an informal release from the current working directory, 
    operate in the working directory.

      RELEASEDIR=${REPODIR}


Create library code by patching generated code and copy to src/sml:

  cd ${RELEASEDIR}
  ./codegen gir
  ./codegen update-gir
  ./codegen fixed
  ./codegen update-fixed
  ./codegen update-source
  ./mlton-codegen auto
  ./mlton-codegen update-auto
  ./mlton-codegen fixed
  ./mlton-codegen update-fixed
  ./mlton-codegen update-source


Create source release archive:

  cd ${RELEASEDIR}
  export VERSION
  make archive


The source release archive is created in the file

  giraffe-${VERSION}.tar.gz


If an informal release is being created in a working directory, clean
up the files built for the source release:

  make clean
